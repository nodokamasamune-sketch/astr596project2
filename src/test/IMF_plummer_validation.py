def IMF_validation():
    '''
    Validationg mass distrution of IMF. Produces :
        Histogram of masses produced by IMF.
    
    Parameters
    ----------
    None: all parameters preset. Number of stars = 100.
    
    Returns
    -------
        Histogram of masses produced by IMF.
    '''
    import sys
    import os
    module_dir = os.path.abspath('../src') #directory to source

    sys.path.append(module_dir)
    from IMF_plummer import IMF
    import numpy as np
    import matplotlib.pyplot as plt
    
    masses = IMF(1000)

    num_bins = 100
    bins = np.logspace(np.log10(0.08), np.log10(150), num_bins)

    plt.hist(masses, bins=bins)
    plt.yscale('log')
    plt.xscale('log')
    plt.ylabel('counts')
    plt.xlabel('mass (solar mass)')
    plt.title('Histogram showing counts vs mass generated by IMF')
    plt.savefig('../outputs/figures/Histogram showing counts vs mass generated by IMF')
    plt.show()

def plummer_validation():
    '''
    Validationg radial distrution of Plummer. Produces :
        Radial density profile of radii produced by Plummer function.
    
    Parameters
    ----------
    None: all parameters preset. Number of stars = 100.
    
    Returns
    -------
        Radial density profile of radii produced by Plummer function.

    '''
    from IMF_plummer import IMF, plummer
    import numpy as np
    import matplotlib.pyplot as plt

    masses = IMF(1000)
    centered_coords, centered_velocities, a = plummer(masses)
    
    #plummer radial density profile
    #plot r vs density
    r = np.linalg.norm(centered_coords, axis = 1)
    p = (1 + (r**2/100**2))**(-5/2)

    plt.scatter(r, p, s = 0.1)
    plt.yscale('log')
    plt.xscale('log')
    plt.xlabel('Radius (AU)')
    plt.ylabel('Density')
    plt.title('Plummer Function Radial Density Profile')
    plt.savefig('../outputs/figures/Plummer Function Radial Density Profile')
    plt.show()